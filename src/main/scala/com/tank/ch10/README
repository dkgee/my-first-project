
第10章 组合和继承
    抽象类(abstract class) 扩展类(extends class)
    超类                   子类

    1，访问字段比访问方法略快，字段在类初始化时被预计算。但是字段需要为每个对象分配更多的内存空间。
    2，当调用有副作用的方法时应确保包含一对空括号。即当调用的函数执行了操作就使用括号，但如果仅仅提供了对某个属性的访问，就省略括号。
    3，Scala中禁止在同一个类里用同样的名称定义字段和方法。
        命名空间：
            值（字段，方法，包和单例对象）
            类型（类和特质名）
    4，Scala中，若子类成员所有重写了父类的具体成员则必须带上override修饰符。
    5，两个数组用zip操作符转换为一个二元对的数组（称为Tuple2）
        Array(1,2,4) zip Array("a", "b")  生成 Array((1, "a"), (2, "b"))


    总结：Scala中的继承关系和Java很相似，都是使用extends 关键字，其中声明的抽象方法略有不同，并不需要加abstract关键字，
    类的伴生对象中可以作为工厂，在其中实现子类的实例对象。其中，伴生对象和类本身定义在同一个文件中，伴生对象的名称和
    类名称是相同的。伴生对象更像一个实例化对象，其中可以定义执行方法入口main函数。类中声明变量的名称不能和方法名称相同，Scala中也
    有方法名称相同，参数类型不同的方法重载现象，这种现象在其伴生对象中也可以有。伴生对象创建使用的是小写开头的object来
    声明，其命名方法和Java类类似，采用驼峰命名。声明方法使用def关键字，方法的参数类型在参数括号中声明，方法的返回值
    在方法名括号后加上英文冒号":"来声明。不加默认是Unit，相当于Java中的void声明的方法。如果重写父类的方法，必须加上override
    关键字，这点与Java不同。声明抽象类使用的abstract关键字，这点与Java相同。其中所有的对象(类，伴生对象)继承自Object类，
    这点和Java类似。

    IntelliJ IDEA快捷键
          F1 开发环境帮助手册
          F2 对象文档
          F3 类声明源代码
          F4 类继承关系

          F6调试
          F8跳过

          Ctrl + G 搜索类中方法引用的路径
          Ctrl + H 项目全局搜索
          Ctrl + F 单个文件搜索
          Ctrl + L 跳到指定行
          Ctrl + D 删除鼠标定位的当前单行
          Ctrl + O 查找类方法(Ctrl + F3 展示继承方法)
          Ctrl + Home 文档开头
          Ctrl + End 文档结尾
          Ctrl + PgUp 编辑窗口前一个文档
          Ctrl + PgDn 编辑窗口后一个文档
          Ctrl + Delete 清除后续单行文本

          Shift + Delete 删除单行
          Shift + Insert 粘贴复制

          Alt + Enter 自动引入依赖类
          Alt + Insert 插入提示(显示要实现方法，接口等)

          Ctrl + Shift + Insert 插入历史内容
          Ctrl + Shift + R  查询项目文件名
          Ctrl + Shift + T 查询项目类名
          Ctrl + Shirft + Y 将选择的字符转换成大写

          Ctrl + Alt + Insert 插入实体对象



          多行同时相同编辑操作
            方式一
                按住Shift不放，
                选择要操作的字符
                再按Alt + Insert
                使用向下方向箭头，选择多行，可以同时进行编辑操作
            方式二
                按住Shift不放，
                使用方向箭头，选择多行，同时进行编辑操作





